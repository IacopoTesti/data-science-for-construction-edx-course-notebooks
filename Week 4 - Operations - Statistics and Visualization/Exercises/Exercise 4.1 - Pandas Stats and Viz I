{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Exercise 4.1 - Pandas Stats and Viz I","provenance":[{"file_id":"1_jGJEOeH6pJZCLmKqllj5oP3t1ffVJ2B","timestamp":1588230570870},{"file_id":"1gDlD8XY8GjvhiE9IN1fVA--9oYZU_Xpl","timestamp":1588135443484}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"HleWR9kG9vCe","colab_type":"text"},"source":["# Data Science for Construction, Architecture and Engineering\n","\n","### Week 4 - Operations - Pandas Statistics and Visualization\n","\n","### Exercise Set 4.1 - Pandas Stats and Viz I\n","\n","This set of exercises is related to the first half of Week 4 videos. Using the same data (Thermal Comfort Database II) and packages (Pandas) as in the videos, we learned how to use `groupby`, `pivot_table` and basic plots, and applied these techniques in the thermal comfort database.\n","\n","There is an introduction video available to explain the process of using this exercise video.\n","\n","The lead developer of this exercise is Chun Fu, a Ph.D. student at NUS and a teaching assistant of this course. \n"]},{"cell_type":"markdown","metadata":{"id":"SgWrI_yaFRLc","colab_type":"text"},"source":["#### Setup the environment\n","\n","Let's set up the environment and read the data first:"]},{"cell_type":"code","metadata":{"id":"3LNZyZpf9Sav","colab_type":"code","outputId":"87cb2432-b958-47b6-b439-fe1c38f08484","executionInfo":{"status":"ok","timestamp":1588667476996,"user_tz":-480,"elapsed":951,"user":{"displayName":"BUDS Lab Team Member","photoUrl":"","userId":"04037643885455272587"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"source":["# import packages\n","import pandas as pd\n","from google.colab import drive\n","import os\n","import seaborn as sns\n","import matplotlib.pyplot as plt"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"Bn2W9wfA-WM7","colab_type":"code","outputId":"d25a3802-1f57-422b-ceb9-9b99694ec141","executionInfo":{"status":"ok","timestamp":1588667497718,"user_tz":-480,"elapsed":21666,"user":{"displayName":"BUDS Lab Team Member","photoUrl":"","userId":"04037643885455272587"}},"colab":{"base_uri":"https://localhost:8080/","height":121}},"source":["# setting path for data source\n","drive.mount('/content/gdrive')\n","os.chdir(\"/content/gdrive/My Drive/EDX Data Science for Construction, Architecture and Engineering/Week 4 - Operations - Statistics and Visualization/\")"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"mK-lFl7l-WTj","colab_type":"code","colab":{}},"source":["# load thermal comfort database\n","ieq_data = pd.read_csv(\"ashrae_thermal_comfort_database_2.csv\", index_col='Unnamed: 0')"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zK4C2bp-AQj4","colab_type":"text"},"source":["`Thermal sensation` is subjects' thermal sensation vote, **from -3 (cold) to +3 (hot)**, which is used to infer occupant thermal satisfaction.\n","\n","As shown in the example below, we can observe that the `Thermal sensation` has significantly different distributions under different cooling strategies.\n","\n","For example, as seen in the code and visualization below, `Thermal sensation` in **naturally ventilated** environment is higher than **air conditioned** one, which means that naturally ventilated environment is warmer."]},{"cell_type":"code","metadata":{"id":"tr8uYvMp-d2d","colab_type":"code","outputId":"3b7e4c63-9c00-43fa-8db5-fa7fbb21f3f3","executionInfo":{"status":"ok","timestamp":1588667499528,"user_tz":-480,"elapsed":23470,"user":{"displayName":"BUDS Lab Team Member","photoUrl":"","userId":"04037643885455272587"}},"colab":{"base_uri":"https://localhost:8080/","height":688}},"source":["# boxplot for Thermal sensation under different cooling strategies\n","ieq_data[['Thermal sensation','Cooling startegy_building level']].groupby('Cooling startegy_building level').boxplot(figsize=(10,10))"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Air Conditioned                 AxesSubplot(0.1,0.559091;0.363636x0.340909)\n","Mechanically Ventilated    AxesSubplot(0.536364,0.559091;0.363636x0.340909)\n","Mixed Mode                          AxesSubplot(0.1,0.15;0.363636x0.340909)\n","Naturally Ventilated           AxesSubplot(0.536364,0.15;0.363636x0.340909)\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":4},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 4 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"ZpVo1sEVCg9k","colab_type":"text"},"source":["## Exercise 04.1.1 - Naturally Ventilated Environments vs. Air-Conditioned\n","\n","In this first exercise, you are asked to do a similar analysis of the data from the Thermal Comfort Database II to understand more about the **naturally ventilated** environment by using similar boxplot for analysis.\n","\n","In the next few code cells, use the example above to understand how does the *temperature* and *humidity* of a **naturally ventilated environment** compare with **air conditioned** one?\n","\n","There are several potential situations you could uncover:\n","1. Naturally ventilated environment has higher temperature and higher humidity\n","2. Naturally ventilated environment has higher temperature and lower humidity\n","3. Naturally ventilated environment has lower temperature and higher humidity\n","4. Naturally ventilated environment has lower temperature and lower humidity\n","\n","To figure out which one is correct, you can create similar box plots to compare those two system types for *temp* and *humidity*."]},{"cell_type":"code","metadata":{"id":"J0qweX6aCBc6","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE (boxplot for \"Air temperature (C)\" under different cooling strategies)\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"80JH6zNF-WY9","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE (boxplot for \"Relative humidity (%)\" under different cooling strategies)\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HZLk3OyoGkZn","colab_type":"text"},"source":["## Exercise 04.1.2 - Finding the Average Values for Each System Type\n","\n","From the question above, we can see the basic characteristics of **naturally ventilated** environment versus an air-conditioned environment.\n","\n","Sometimes, instead of a distribution comparison, we want to boil down the data to a single number, such as the average or mean.\n","\n","In this exercise, use the following cell to write code that finds the average value of all quanitative columns in the `ieq_data` DataFrame for each of the system types (Air-Conditioned, Mechanically Ventilated, Mixed Mode, and Naturally Ventilated). \n","\n","Hint: There is a Pandas function that enables you to do this in a *single line of code*"]},{"cell_type":"code","metadata":{"id":"3hvDDhShF0s9","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE \n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"XaWJXJE9Lts5","colab_type":"text"},"source":["## Exercise 04.1.3 - Finding the lowest seasonal temperature for each country - Advanced (Optional)\n","\n","The previous two questions look at the data set as a whole -- what if we're interested in only the data from specific subsets of the data, the country where the data was collected for example. \n","\n","In this exercise, create a several lines of code that finds the **lowest average air temperature in each season** in our dataset. \n","\n","Hint: The `Season`, `Air temperature (C)`, and `Country` columns are all important in this data transformation."]},{"cell_type":"code","metadata":{"id":"K_D5avE6oicP","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE (Hint: using groupby() function aggregated by mean())\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"PLhCHPtBSrmj","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}