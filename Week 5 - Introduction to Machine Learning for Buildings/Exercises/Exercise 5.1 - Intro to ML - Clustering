{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Exercise 5.1 - Intro to ML - Clustering","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"dASKmO_NAPhl","colab_type":"text"},"source":["# Data Science for Construction, Architecture and Engineering\n","### Week 5 - Introduction to Machine Learning\n","## Exercise Set 5.1 - Introduction to ML - Clustering\n","\n","This exercise is related to the first half of Week 5 videos. Using the same data (Project Building Data Genome) and packages (sklearn, matplotlib) as in the videos, the following tasks about supervised and unsupervised learning algorithms. \n","\n","\n","There is an introduction video available to explain the process of using this exercise video.\n","\n","The developers of this exercise are Ananya Joshi, a Fulbright Scholar to Singapore for 2019-2020 and Mahmoud Abdelrahman, a Ph.D. student at NUS and a teaching assistant of this course.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"1Ki5GuClMOyp","colab_type":"text"},"source":["#### Setup the environment\n","\n","Let's set up the environment that is similar to the colab notebooks from the videos and read the data first:"]},{"cell_type":"code","metadata":{"id":"pWpaAeCbABtP","colab_type":"code","colab":{}},"source":["# Import packages\n","import pandas as pd\n","import os\n","import matplotlib.pyplot as plt\n","import matplotlib\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gBVZFrGv34Ph","colab_type":"code","colab":{}},"source":["# Import Machine learning modules\n","import sklearn\n","from sklearn import metrics\n","from sklearn.neighbors import KNeighborsRegressor\n","\n","from scipy.cluster.vq import kmeans, vq, whiten\n","from scipy.spatial.distance import cdist\n","import numpy as np\n","from datetime import datetime\n","import seaborn as sns"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"92fJuAiuuhdo","colab_type":"code","colab":{}},"source":["# Mount the drive\n","from google.colab import drive\n","drive.mount('/content/gdrive')\n","# Change directory location (hint: chdir)\n","os.chdir(\"/content/gdrive/My Drive/EDX Data Science for Construction, Architecture and Engineering/Week 3 - Construction - Pandas Fundamentals/meter_data/\")"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TifaIJagCSIo","colab_type":"text"},"source":["## Exercise 05.1.1 - Visualize Daily Profiles for Building\n","\n","In the first exercise, we will simply load data from a building in a similar way as what was done in the notebook from the videos focused on Clustering. In the following cells you will simply need to follow the instructions to create visualizations of the daily profiles of both *weekdays* and *weekends*.\n","\n","In this Exercise, let's load the data from the building `Office_Mercedes.csv`\n"," \"Office Mercedes\" building. Follow the instructions in each code cell to undertake this process.\n","\n"," Hint: these code are basically copy and paste from the notebook (`Clustering and Regression -  Daily Electrical Load Profiles and Prediction.ipynb`) from the vides with certain modifications.\n"]},{"cell_type":"code","metadata":{"id":"gf0nMfuSu_ar","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE to load the data set from the file and new columns that add date and time. (approx. 2-4 lines of code)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"6eKW6Azt4JLD","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE to pivot the data set into a format which can be plotted as overlapping daily load profiles. (approx. 1-3 lines of code)\n","# You will need to also create a new column that indicates weekdays so you can filter them before pivoting\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7o0JytMHmXZk","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE to visualize the overlapping daily load profiles for weekdays (approx. 3-6 lines of code)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jroPzkg73lOs","colab_type":"code","colab":{}},"source":["#  YOUR CODE HERE to do the same process, but this time for weekends (approx. 4-7 lines of code)\n"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"R8P_lyBXBJHO","colab_type":"text"},"source":["## Exercise 05.1.2 - Clustering\n","\n","Now, lets get into some actual Unsupervised Machine Learning! :)\n","\n","Use the code from the notebook showcased in the video to take the data loaded just now for `Office_Mercedes.csv` and cluster the daily load profiles to create **three clusters** of daily profiles\n","\n","Follow the instructions in the comments of each cell to find code from the video lecture notebook and adapt for this exercise.\n","\n","Hint: Much of the code is directly from the lecture video notebook with a few adaptations."]},{"cell_type":"code","metadata":{"id":"i5-r6etILk5K","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE to reload the data file and to create a normalized data frame called df_norm (approx. 2-3 lines of code)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"5HtXgO4Yo1Dk","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE to add date and time columns to both the original dataframe and the df_norm (approx. 3-5 lines of code)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ilXT71sINTWU","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE to create two pivoted DataFrame -- one for the normalized and unnormalized DataFrames (approx. 2-3 lines of code)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7kMldUgpOwiT","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE to create three clusters out of the normalized dataframe using k-means (approx. 3-4 lines of code)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"YF__tTRMUpsq","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE to assign the cluster number of each day into a new column called \"ClusterNo\" (approx. 2-3 lines of code)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"o0DfpIdtQtjC","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE to plot the clusters as a line chart with overlapping lines and a different color for each cluster (approx. 14-18 lines of code)\n"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"tFG5KU9jWiZz","colab_type":"text"},"source":["## Exercise 05.1.3 - Creating a new line-based visualization - Advanced (Optional)\n","For each cluster, calculate the hourly **mean and standard deviation**, and plot the **mean** and the **standard deviation** in a duplicate visualization to the following graphic, except with three clusters instead of four.\n","\n","<center><img src=\"https://user-images.githubusercontent.com/6969514/81120853-1890da00-8f60-11ea-9861-4817e4c4587f.png\" width=\"60%\" style=\"align:center\"></center>\n","\n","This exercise is fairly advanced and will require creating code that you won't find in the video notebooks. Its a good challenge for participants who really want to test their skills, but it won't be on the quiz.\n","\n","**Hint 1:** You can `groupby` cluster number and then get the mean `.mean()` and the standard deviation `.std()`\n","\n","**Hint 2:** Use matplotlib to [`fill_between`](https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.fill_between.html) the uper and the lower limits of the std"]},{"cell_type":"code","metadata":{"id":"hAcuGShWQwJq","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE to concat the pivoted DataFrame with the Clusters (approx. 1-2 lines of code)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"DWQy9qM1dEL1","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE to use groupby and various aggregation functions (.mean(), std(), etc) to create new dataframes to plot (approx. 3-5 lines of code)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"nrTKizn1dG3X","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE to plot the generated aggregated dataframe and the shading between them (approx. 11-15 lines of code)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"qPeiFPg7jHUA","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}